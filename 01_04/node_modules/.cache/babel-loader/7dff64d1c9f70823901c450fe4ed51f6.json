{"ast":null,"code":"var _jsxFileName = \"/Users/zahra/Desktop/repository/firebase-training/01_04/src/auth/SignInForm.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Button, ErrorMessage, Heading, Modal, TextInput } from '../ui';\nimport { ResetPasswordForm } from './ResetPasswordForm';\nconst Form = styled.div`\n    width: 350px;\n    margin: 32px;\n`;\nconst FullWidthTextInput = styled(TextInput)`\n    display: block;\n    width: 100%;\n`;\nconst FullWidthButton = styled(Button)`\n    display: block;\n    width: 100%;\n`;\nconst CreateAccountButton = styled(FullWidthButton)`\n    position: relative;\n    top: 104px;\n    margin-top: -64px;\n`;\n\nconst withTopMargin = px => ({\n  marginTop: `${px}px`\n});\n/*\n    This component contains the contents that are shown\n    inside the box of the Sign-In Page - email address, password, etc.\n*/\n\n\nexport const SignInForm = () => {\n  const [emailValue, setEmailValue] = useState('');\n  const [passwordValue, setPasswordValue] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const history = useHistory();\n\n  const onSignInClicked = async () => {// Firebase code goes here\n  };\n\n  const onSignInWithGoogleClicked = async () => {// Firebase code goes here\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"My Reservations App\"), errorMessage ? /*#__PURE__*/React.createElement(ErrorMessage, {\n    style: {\n      marginBottom: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, errorMessage) : null, /*#__PURE__*/React.createElement(FullWidthTextInput, {\n    name: \"email\",\n    value: emailValue,\n    placeholder: \"someone@gmail.com\",\n    onChange: e => setEmailValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FullWidthTextInput, {\n    name: \"password\",\n    type: \"password\",\n    value: passwordValue,\n    placeholder: \"Password\",\n    style: withTopMargin(8),\n    onChange: e => setPasswordValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FullWidthButton, {\n    type: \"transparent\",\n    style: withTopMargin(8),\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Forgot your password?\"), /*#__PURE__*/React.createElement(FullWidthButton, {\n    disabled: !emailValue || !passwordValue,\n    style: withTopMargin(8),\n    onClick: onSignInClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(FullWidthButton, {\n    style: withTopMargin(8),\n    onClick: onSignInWithGoogleClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Sign In With Google\"), /*#__PURE__*/React.createElement(CreateAccountButton, {\n    type: \"transparent\",\n    onClick: () => history.push('/create-account'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Create an account\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: showModal,\n    onRequestClose: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ResetPasswordForm, {\n    onClose: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/zahra/Desktop/repository/firebase-training/01_04/src/auth/SignInForm.js"],"names":["React","useState","useHistory","styled","Button","ErrorMessage","Heading","Modal","TextInput","ResetPasswordForm","Form","div","FullWidthTextInput","FullWidthButton","CreateAccountButton","withTopMargin","px","marginTop","SignInForm","emailValue","setEmailValue","passwordValue","setPasswordValue","errorMessage","setErrorMessage","showModal","setShowModal","history","onSignInClicked","onSignInWithGoogleClicked","marginBottom","e","target","value","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n    Button,\n    ErrorMessage,\n    Heading,\n    Modal,\n    TextInput,\n} from '../ui';\nimport { ResetPasswordForm } from './ResetPasswordForm';\n\nconst Form = styled.div`\n    width: 350px;\n    margin: 32px;\n`;\n\nconst FullWidthTextInput = styled(TextInput)`\n    display: block;\n    width: 100%;\n`;\n\nconst FullWidthButton = styled(Button)`\n    display: block;\n    width: 100%;\n`;\n\nconst CreateAccountButton = styled(FullWidthButton)`\n    position: relative;\n    top: 104px;\n    margin-top: -64px;\n`;\n\nconst withTopMargin = px => ({ marginTop: `${px}px` });\n\n/*\n    This component contains the contents that are shown\n    inside the box of the Sign-In Page - email address, password, etc.\n*/\nexport const SignInForm = () => {\n    const [emailValue, setEmailValue] = useState('');\n    const [passwordValue, setPasswordValue] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [showModal, setShowModal] = useState(false);\n\n    const history = useHistory();\n\n    const onSignInClicked = async () => {\n        // Firebase code goes here\n    }\n\n    const onSignInWithGoogleClicked = async () => {\n        // Firebase code goes here\n    }\n\n    return (\n        <Form>\n            <Heading>My Reservations App</Heading>\n            {errorMessage\n                ? <ErrorMessage style={{\n                    marginBottom: '16px',\n                }}>\n                    {errorMessage}\n                </ErrorMessage>\n                : null}\n            <FullWidthTextInput\n                name='email'\n                value={emailValue}\n                placeholder='someone@gmail.com'\n                onChange={e => setEmailValue(e.target.value)} />\n            <FullWidthTextInput\n                name='password'\n                type='password'\n                value={passwordValue}\n                placeholder='Password'\n                style={withTopMargin(8)}\n                onChange={e => setPasswordValue(e.target.value)} />\n            <FullWidthButton\n                type='transparent'\n                style={withTopMargin(8)}\n                onClick={() => setShowModal(true)}\n            >Forgot your password?</FullWidthButton>\n            <FullWidthButton\n                disabled={!emailValue || !passwordValue}\n                style={withTopMargin(8)}\n                onClick={onSignInClicked}\n            >Sign In</FullWidthButton>\n            <FullWidthButton\n                style={withTopMargin(8)}\n                onClick={onSignInWithGoogleClicked}\n            >Sign In With Google</FullWidthButton>\n            <CreateAccountButton\n                type='transparent'\n                onClick={() => history.push('/create-account')}\n            >Create an account</CreateAccountButton>\n            <Modal\n                isOpen={showModal}\n                onRequestClose={() => setShowModal(false)}\n            >\n                <ResetPasswordForm onClose={() => setShowModal(false)} />\n            </Modal>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}