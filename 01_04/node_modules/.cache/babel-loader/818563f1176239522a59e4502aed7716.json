{"ast":null,"code":"var _jsxFileName = \"/Users/zahra/Desktop/repository/firebase-training/01_04/src/auth/CreateAccountPage.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { validate as isEmail } from 'isemail';\nimport { Button, CenteredContentBox, ErrorMessage, HeadingSmall, TextInput, TextArea } from '../ui'; // These are styled components, which are used throughout\n// the application. Basically, they allow us to define CSS\n// inside our React JavaScript files, instead of having\n// separate CSS files for each component.\n\nconst Form = styled.div`\n    width: 600px;\n    margin: 32px;\n`;\nconst FieldsTable = styled.table`\n    width: 100%;\n    td {\n        padding: 8px;\n        width: 50%;\n    }\n`;\nconst FullWidthInput = styled(TextInput)`\n    width: 100%;\n`;\nconst FullWidthButton = styled(Button)`\n    width: 100%;\n`;\nexport const CreateAccountPage = () => {\n  // All these different state variables are how we usually\n  // keep track of form input values in React\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [bio, setBio] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // We can use the \"useHistory\" hook to change the browser\n  // URL programmatically, such as after some async operation completes\n\n  const history = useHistory(); // A helper function that makes sure all the fields\n  // are filled out correctly\n\n  const validateForm = () => {\n    if (!firstName || !lastName || !emailAddress) return 'Please fill out all fields';\n    if (!isEmail(emailAddress)) return 'Please enter a valid email address';\n    if (password !== confirmPassword) return 'Passwords do not match';\n    return null;\n  }; // Here's the function that will be called when the user\n  // clicks the \"Create Account\" button.\n\n\n  const onClickCreate = async () => {\n    setErrorMessage(''); // If there are any validation errors, show an error\n    // and do not proceed.\n\n    const validationError = validateForm();\n\n    if (validationError) {\n      setErrorMessage(validationError);\n      return;\n    } // Firebase-related code goes here\n\n  };\n\n  return /*#__PURE__*/React.createElement(CenteredContentBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeadingSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Create an Account\"), errorMessage ? /*#__PURE__*/React.createElement(ErrorMessage, {\n    style: {\n      marginBottom: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, errorMessage) : null, /*#__PURE__*/React.createElement(FieldsTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"First Name:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FullWidthInput, {\n    value: firstName,\n    placeholder: \"John\",\n    onChange: e => setFirstName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"Last Name:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FullWidthInput, {\n    value: lastName,\n    placeholder: \"Doe\",\n    onChange: e => setLastName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, \"Email Address:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FullWidthInput, {\n    value: emailAddress,\n    placeholder: \"john.doe@gmail.com\",\n    onChange: e => setEmailAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FullWidthInput, {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, \"Confirm Password:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FullWidthInput, {\n    type: \"password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, \"Bio:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: \"5\",\n    value: bio,\n    placeholder: \"Tell others a little bit about yourself\",\n    style: {\n      width: '100%'\n    },\n    onChange: e => setBio(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(FullWidthButton, {\n    onClick: onClickCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Create Account\")));\n};","map":{"version":3,"sources":["/Users/zahra/Desktop/repository/firebase-training/01_04/src/auth/CreateAccountPage.js"],"names":["React","useState","styled","useHistory","validate","isEmail","Button","CenteredContentBox","ErrorMessage","HeadingSmall","TextInput","TextArea","Form","div","FieldsTable","table","FullWidthInput","FullWidthButton","CreateAccountPage","firstName","setFirstName","lastName","setLastName","emailAddress","setEmailAddress","password","setPassword","confirmPassword","setConfirmPassword","bio","setBio","errorMessage","setErrorMessage","history","validateForm","onClickCreate","validationError","marginBottom","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { validate as isEmail } from 'isemail';\nimport {\n    Button,\n    CenteredContentBox,\n    ErrorMessage,\n    HeadingSmall,\n    TextInput,\n    TextArea,\n} from '../ui';\n\n// These are styled components, which are used throughout\n// the application. Basically, they allow us to define CSS\n// inside our React JavaScript files, instead of having\n// separate CSS files for each component.\nconst Form = styled.div`\n    width: 600px;\n    margin: 32px;\n`;\n\nconst FieldsTable = styled.table`\n    width: 100%;\n    td {\n        padding: 8px;\n        width: 50%;\n    }\n`;\n\nconst FullWidthInput = styled(TextInput)`\n    width: 100%;\n`;\n\nconst FullWidthButton = styled(Button)`\n    width: 100%;\n`;\n\nexport const CreateAccountPage = () => {\n    // All these different state variables are how we usually\n    // keep track of form input values in React\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [emailAddress, setEmailAddress] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [bio, setBio] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    // We can use the \"useHistory\" hook to change the browser\n    // URL programmatically, such as after some async operation completes\n    const history = useHistory();\n\n    // A helper function that makes sure all the fields\n    // are filled out correctly\n    const validateForm = () => {\n        if (!firstName || !lastName || !emailAddress) return 'Please fill out all fields';\n        if (!isEmail(emailAddress)) return 'Please enter a valid email address';\n        if (password !== confirmPassword) return 'Passwords do not match';\n        return null;\n    }\n    \n    // Here's the function that will be called when the user\n    // clicks the \"Create Account\" button.\n    const onClickCreate = async () => {\n        setErrorMessage('');\n\n        // If there are any validation errors, show an error\n        // and do not proceed.\n        const validationError = validateForm();\n        if (validationError) {\n            setErrorMessage(validationError);\n            return;\n        }\n\n        // Firebase-related code goes here\n    }\n\n    return (\n        <CenteredContentBox>\n            <Form>\n                <HeadingSmall>Create an Account</HeadingSmall>\n                {errorMessage\n                    ? <ErrorMessage style={{\n                        marginBottom: '16px',\n                    }}>\n                        {errorMessage}\n                    </ErrorMessage>\n                    : null}\n                <FieldsTable>\n                    <tbody>\n                        <tr>\n                            <td>First Name:</td>\n                            <td>\n                                <FullWidthInput\n                                    value={firstName}\n                                    placeholder='John'\n                                    onChange={e => setFirstName(e.target.value)} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Last Name:</td>\n                            <td>\n                                <FullWidthInput\n                                    value={lastName}\n                                    placeholder='Doe'\n                                    onChange={e => setLastName(e.target.value)} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Email Address:</td>\n                            <td>\n                                <FullWidthInput\n                                    value={emailAddress}\n                                    placeholder='john.doe@gmail.com'\n                                    onChange={e => setEmailAddress(e.target.value)} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Password:</td>\n                            <td>\n                                <FullWidthInput\n                                    type='password'\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Confirm Password:</td>\n                            <td>\n                                <FullWidthInput\n                                    type='password'\n                                    value={confirmPassword}\n                                    onChange={e => setConfirmPassword(e.target.value)} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Bio:</td>\n                            <td>\n                                <TextArea\n                                    rows='5'\n                                    value={bio}\n                                    placeholder='Tell others a little bit about yourself'\n                                    style={{ width: '100%' }}\n                                    onChange={e => setBio(e.target.value)} />\n                            </td>\n                        </tr>\n                    </tbody>\n                </FieldsTable>\n                <FullWidthButton\n                    onClick={onClickCreate}\n                >Create Account</FullWidthButton>\n            </Form>\n        </CenteredContentBox>\n    )\n}"]},"metadata":{},"sourceType":"module"}