{"ast":null,"code":"var _jsxFileName = \"/Users/zahra/Desktop/repository/firebase-training/01_04/src/auth/EmailConfirmationLanderPage.js\";\nimport React from 'react';\nimport { LanderPage } from '../ui';\n\nconst SuccessMessage = () => /*#__PURE__*/React.createElement(LanderPage, {\n  heading: \"Thanks for confirming!\",\n  message: `\n            Woohoo! Now that you've confirmed your email,\n            sign in to start making reservations.\n        `,\n  buttonText: \"Sign In\",\n  redirectUrl: \"/sign-in\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }\n});\n\nconst FailureMessage = () => /*#__PURE__*/React.createElement(LanderPage, {\n  heading: \"Uh oh...\",\n  message: `\n            It looks like something went wrong with your confirmation.\n            If you waited a while since creating your account, you may have\n            to create it again.\n        `,\n  buttonText: \"Create account\",\n  redirectUrl: \"/create-account\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n});\n/*\n    This is the page/component that the user will land on\n    when they attempt to confirm their email. We'll have Firebase\n    send them to either the \"success\" or \"failure\" route, depending\n    on whether or not their confirmation was successful.\n*/\n\n\nexport const EmailConfirmationLanderPage = ({\n  success\n}) => {\n  return success ? /*#__PURE__*/React.createElement(SuccessMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(FailureMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  });\n};","map":{"version":3,"sources":["/Users/zahra/Desktop/repository/firebase-training/01_04/src/auth/EmailConfirmationLanderPage.js"],"names":["React","LanderPage","SuccessMessage","FailureMessage","EmailConfirmationLanderPage","success"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,cAAc,GAAG,mBACnB,oBAAC,UAAD;AACI,EAAA,OAAO,EAAC,wBADZ;AAEI,EAAA,OAAO,EAAG;;;SAFd;AAMI,EAAA,UAAU,EAAC,SANf;AAOI,EAAA,WAAW,EAAC,UAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ;;AAWA,MAAMC,cAAc,GAAG,mBACnB,oBAAC,UAAD;AACI,EAAA,OAAO,EAAC,UADZ;AAEI,EAAA,OAAO,EAAG;;;;SAFd;AAOI,EAAA,UAAU,EAAC,gBAPf;AAQI,EAAA,WAAW,EAAC,iBARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ;AAYA;;;;;;;;AAMA,OAAO,MAAMC,2BAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACxD,SAAOA,OAAO,gBACR,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAER,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN;AAGH,CAJM","sourcesContent":["import React from 'react';\nimport { LanderPage } from '../ui';\n\nconst SuccessMessage = () => (\n    <LanderPage\n        heading='Thanks for confirming!'\n        message={`\n            Woohoo! Now that you've confirmed your email,\n            sign in to start making reservations.\n        `}\n        buttonText='Sign In'\n        redirectUrl='/sign-in' />\n);\n\nconst FailureMessage = () => (\n    <LanderPage\n        heading='Uh oh...'\n        message={`\n            It looks like something went wrong with your confirmation.\n            If you waited a while since creating your account, you may have\n            to create it again.\n        `}\n        buttonText='Create account'\n        redirectUrl='/create-account' />\n);\n\n/*\n    This is the page/component that the user will land on\n    when they attempt to confirm their email. We'll have Firebase\n    send them to either the \"success\" or \"failure\" route, depending\n    on whether or not their confirmation was successful.\n*/\nexport const EmailConfirmationLanderPage = ({ success }) => {\n    return success\n        ? <SuccessMessage />\n        : <FailureMessage />\n}"]},"metadata":{},"sourceType":"module"}