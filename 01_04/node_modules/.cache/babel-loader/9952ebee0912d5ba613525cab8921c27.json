{"ast":null,"code":"var _jsxFileName = \"/Users/zahra/Desktop/repository/firebase-training/01_04/src/restaurants/RestaurantDetailPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { Button, Heading, Link, MaxWidthContentSection, Modal, Rating, SelectionList, Tag, Thumbnail } from '../ui';\nimport { ReviewListItem } from '../reviews';\nimport { MakeAReservationForm } from '../reservations';\nconst ThumbnailWrap = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst DetailsSection = styled.div`\n    flex: 8;\n`;\nconst TagSection = styled.div`\n    margin: 16px 0;\n`;\nconst FullWidthButton = styled(Button)`\n    margin-top: 16px;\n    display: block;\n    width: 100%;\n`;\nconst CenteredButton = styled(Button)`\n    display: block;\n    margin: auto;\n`;\n/*\n    This page displays detailed information about the selected restaurant,\n    including a list of reviews that users have left. It also has a \"make a reservation\"\n    button that displays a modal of available reservation times.\n*/\n\nexport const RestaurantDetailPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [restaurant, setRestaurant] = useState({});\n  const [reviews, setReviews] = useState([]);\n  const {\n    name,\n    rating,\n    address = {},\n    tags = [],\n    bio\n  } = restaurant || {};\n  const {\n    id\n  } = useParams();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {// Firebase code for loading the restaurant goes here\n  }, [id]);\n  useEffect(() => {// Firebase code for loading the restaurant's reviews goes here\n  }, [id]); // Display a loading message while the Firebase data is loading\n\n  return isLoading ? /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(MaxWidthContentSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(ThumbnailWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Thumbnail, {\n    height: \"300px\",\n    width: \"600px\",\n    url: restaurant.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DetailsSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Rating, {\n    value: rating,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, address.street, \",\\xA0\", address.city, \"\\xA0\"), /*#__PURE__*/React.createElement(TagSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, tags.map(tag => /*#__PURE__*/React.createElement(Tag, {\n    key: tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 38\n    }\n  }, tag))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, bio)), /*#__PURE__*/React.createElement(FullWidthButton, {\n    onClick: () => setModalIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Make a Reservation\"), /*#__PURE__*/React.createElement(SelectionList, {\n    title: \"Reviews\",\n    items: reviews,\n    keyProperty: \"id\",\n    itemComponent: ReviewListItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: `/write-a-review/${restaurant.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CenteredButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Write A Review\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: () => setModalIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MakeAReservationForm, {\n    restaurant: restaurant,\n    onClose: () => setModalIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/zahra/Desktop/repository/firebase-training/01_04/src/restaurants/RestaurantDetailPage.js"],"names":["React","useState","useEffect","styled","useParams","Button","Heading","Link","MaxWidthContentSection","Modal","Rating","SelectionList","Tag","Thumbnail","ReviewListItem","MakeAReservationForm","ThumbnailWrap","div","DetailsSection","TagSection","FullWidthButton","CenteredButton","RestaurantDetailPage","isLoading","setIsLoading","restaurant","setRestaurant","reviews","setReviews","name","rating","address","tags","bio","id","modalIsOpen","setModalIsOpen","imageUrl","street","city","map","tag"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SACIC,MADJ,EAEIC,OAFJ,EAGIC,IAHJ,EAIIC,sBAJJ,EAKIC,KALJ,EAMIC,MANJ,EAOIC,aAPJ,EAQIC,GARJ,EASIC,SATJ,QAUO,OAVP;AAWA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,oBAAT,QAAqC,iBAArC;AAEA,MAAMC,aAAa,GAAGb,MAAM,CAACc,GAAI;;;;CAAjC;AAMA,MAAMC,cAAc,GAAGf,MAAM,CAACc,GAAI;;CAAlC;AAIA,MAAME,UAAU,GAAGhB,MAAM,CAACc,GAAI;;CAA9B;AAIA,MAAMG,eAAe,GAAGjB,MAAM,CAACE,MAAD,CAAS;;;;CAAvC;AAMA,MAAMgB,cAAc,GAAGlB,MAAM,CAACE,MAAD,CAAS;;;CAAtC;AAKA;;;;;;AAKA,OAAO,MAAMiB,oBAAoB,GAAG,MAAM;AACtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAE4B,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,OAAO,GAAG,EAA1B;AAA8BC,IAAAA,IAAI,GAAG,EAArC;AAAyCC,IAAAA;AAAzC,MAAiDR,UAAU,IAAI,EAArE;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAS9B,SAAS,EAAxB;AACA,QAAM,CAAC+B,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACgC,EAAD,CAFM,CAAT;AAIAhC,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACgC,EAAD,CAFM,CAAT,CAbsC,CAiBtC;;AACA,SAAOX,SAAS,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,gBACZ,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUM,IAAV,CADJ,eAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAA0B,IAAA,KAAK,EAAC,OAAhC;AAAwC,IAAA,GAAG,EAAEJ,UAAU,CAACY,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAKI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEP,MADX;AAEI,IAAA,QAAQ,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OAAO,CAACO,MADb,WAEKP,OAAO,CAACQ,IAFb,SAJJ,eAQI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,IAAI,CAACQ,GAAL,CAASC,GAAG,iBAAI,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBA,GAAhB,CAAhB,CADL,CARJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMR,GAAN,CAXJ,CALJ,eAkBI,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAE,MAAMG,cAAc,CAAC,IAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAlBJ,eAmBI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,KAAK,EAAET,OAFX;AAGI,IAAA,WAAW,EAAC,IAHhB;AAII,IAAA,aAAa,EAAEb,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,eAwBI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,mBAAkBW,UAAU,CAACS,EAAG,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAxBJ,eA2BI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEC,WADZ;AAEI,IAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGQ,oBAAC,oBAAD;AAAsB,IAAA,UAAU,EAAEX,UAAlC;AAA8C,IAAA,OAAO,EAAE,MAAMW,cAAc,CAAC,KAAD,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CA3BJ,CADJ;AAmCH,CArDM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport {\n    Button,\n    Heading,\n    Link,\n    MaxWidthContentSection,\n    Modal,\n    Rating,\n    SelectionList,\n    Tag,\n    Thumbnail,\n} from '../ui';\nimport { ReviewListItem } from '../reviews';\nimport { MakeAReservationForm } from '../reservations';\n\nconst ThumbnailWrap = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst DetailsSection = styled.div`\n    flex: 8;\n`;\n\nconst TagSection = styled.div`\n    margin: 16px 0;\n`;\n\nconst FullWidthButton = styled(Button)`\n    margin-top: 16px;\n    display: block;\n    width: 100%;\n`;\n\nconst CenteredButton = styled(Button)`\n    display: block;\n    margin: auto;\n`;\n\n/*\n    This page displays detailed information about the selected restaurant,\n    including a list of reviews that users have left. It also has a \"make a reservation\"\n    button that displays a modal of available reservation times.\n*/\nexport const RestaurantDetailPage = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [restaurant, setRestaurant] = useState({});\n    const [reviews, setReviews] = useState([]);\n    const { name, rating, address = {}, tags = [], bio } = restaurant || {};\n\n    const { id } = useParams();\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    useEffect(() => {\n        // Firebase code for loading the restaurant goes here\n    }, [id]);\n\n    useEffect(() => {\n        // Firebase code for loading the restaurant's reviews goes here\n    }, [id]);\n\n    // Display a loading message while the Firebase data is loading\n    return isLoading ? <Heading>Loading...</Heading> : (\n        <MaxWidthContentSection>\n            <Heading>{name}</Heading>\n            <ThumbnailWrap>\n                <Thumbnail height='300px' width='600px' url={restaurant.imageUrl} />\n            </ThumbnailWrap>\n            <DetailsSection>\n                <Rating\n                    value={rating}\n                    readOnly />\n                <div>\n                    {address.street},&nbsp;\n                    {address.city}&nbsp;\n                </div>\n                <TagSection>\n                    {tags.map(tag => <Tag key={tag}>{tag}</Tag>)}\n                </TagSection>\n                <div>{bio}</div>\n            </DetailsSection>\n            <FullWidthButton onClick={() => setModalIsOpen(true)}>Make a Reservation</FullWidthButton>\n            <SelectionList\n                title='Reviews'\n                items={reviews}\n                keyProperty='id'\n                itemComponent={ReviewListItem} />\n            <Link to={`/write-a-review/${restaurant.id}`}>\n                <CenteredButton>Write A Review</CenteredButton>\n            </Link>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}>\n                    <MakeAReservationForm restaurant={restaurant} onClose={() => setModalIsOpen(false)} />\n            </Modal>\n        </MaxWidthContentSection>\n    )\n}"]},"metadata":{},"sourceType":"module"}